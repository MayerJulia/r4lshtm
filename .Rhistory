getwd()
setwd(".\Data")
setwd("./Data")
mwanza <- read_dta("./Data/mwanza17.dta") %>% as_factor()
mwanza <- read_dta(".\Data\mwanza17.dta") %>% as_factor()
mwanza <- read_dta("./Data/mwanza.dta") %>% as_factor()
# Load packages
library(haven)
library(magrittr)
library(epitools)
library(epiDisplay)
library(pubh)
library(epiDisplay)
library(pubh)
library(rstatix)
library(tidyverse)
# Limit significant digits to 2, reduce scientific notation
options(digits = 2, scipen = 9)
getwd()
mwanza <- read_dta("./Data/mwanza.dta") %>% as_factor()
mwanza <- read_dta("C:/Users(julia/Documents/LSHTM/Term3/ASMA/Data/mwanza.dta") %>% as_factor()
mwanza <- read_dta("C:/Users/julia/Documents/LSHTM/Term3/ASMA/Data/mwanza.dta") %>% as_factor()
mwanza <- read_dta("C:/Users/julia/Documents/LSHTM/Term3/ASME/Data/mwanza.dta") %>% as_factor()
mwanza <- read_dta("C:/Users/julia/Documents/LSHTM/Term 3/ASME/Data/mwanza.dta") %>% as_factor()
# Variable names
names(mwanza)
# Preview of the dataset
mwanza
# Visualise the whole dataset
View(mwanza)
# These two are equivalent
tabpct(mwanza$ed, mwanza$case, graph = F)
mwanza %$% tabpct(ed, case, graph = F)
mwanza %>%
filter(age1 <= 3) %$%
tabpct(ed, case, graph = F)
mwanza %>%
summarise(across(c(age1, ed, rel),
~ tabpct(.x, case, percent = "col", graph = F)))
# Create a new variable, relevel and label
mwanza %<>%
mutate(age2 =  as.factor(case_when(age1 <= 2 ~ "15-24",
age1 == 3 | age1 == 4 ~ "25-34",
age1 == 5 | age1 == 6 ~ "35+")))
# Create a new variable, relevel and label
mwanza %<>%
mutate(ed2 =  as.factor(case_when(ed == 1 ~ 0,
ed != 1 ~ 1)))
# Ensure it went ok
mwanza %$% table(age1, age2, useNA = "ifany")
mwanza %<>% mutate(npa = na_if(npa, 9))
# Check it worked ok
mwanza %$% table(npa, useNA = "ifany")
mwanza %<>% mutate(msta = na_if(msta, 9),
eth = na_if(eth, 9),
rel = na_if(rel, 9))
mwanza %>%
select(msta, eth, rel) %>%
map(table, useNA = "ifany")
# Chi-square
mwanza %$% cc(ed, case, graph = F)
# Test for trend
mwanza %$% table(case, ed) %>%
prop_trend_test()
# Stratified ORs
mwanza %$% table(ed, case) %>% oddsratio() %$% measure
mwanza %$% epiDisplay::mhor(case, ed2, age2, graph = F)
# Logistic regression
glm(case ~ ed,
family = "binomial",
data = mwanza) %>%
epiDisplay::logistic.display()
# Logistic regression with covariate
glm(case ~ ed + age2,
family = "binomial",
data = mwanza) %>%
epiDisplay::logistic.display()
# Load packages
library(haven)
library(magrittr)
library(epiDisplay)
library(epitools)
library(pubh)
#update R
install.packages("installr")
library(installr)
updateR()
updateR()
# Load packages
library(haven)
library(magrittr)
library(epiDisplay)
library(epitools)
library(pubh)
library(rstatix)
library(tidyverse)
# Limit significant digits to 2, remove scientific notation
options(digits = 2, scipen = 9)
# Data import
mwanza <- read_dta("C:/Users/julia/Documents/LSHTM/Term 3/ASME/Data/mwanza.dta") %>% as_factor()
# Data tidying
# Recode missing values
mwanza %<>% mutate(across(everything(), ~ na_if(.x, 9)))
# Create new variables, relevel and label
mwanza %<>%
mutate(age2 =  as.factor(
case_when(
age1 == "1" | age1 == "2"  ~ "15-24",
age1 == "3" | age1 == "4" ~ "25-34",
age1 == "5" | age1 == "6" ~ "35+"))) %>%
mutate(ed2 =  as.factor(
case_when(ed == 1 ~ 0,
ed != 1 ~ 1)))
mwanza %$% table(npa, useNA = "ifany")
table(mwanza$npa,useNA = "ifany")
mwanza %$% table(npa, useNA = "ifany")
table(mwanza$npa,useNA = "ifany")
?useNA
??useNA
?table
mwanza %$% tabpct (npa, case, percent = "col", graph = F)
glm(case~npa, family = "binomial", data = mwanza) %>%
logistic.display()
glm (case ~ npa, family = "binomial", data = mwanza)
glm(case~npa, family = "binomial", data = mwanza) %>%
logistic.display()
glm (case ~ npa, family = "binomial", data = mwanza)
glm(case~npa, family = "binomial", data = mwanza) %>%
logistic.display() #shows OR and CI
# Relevel the factor
mwanza$npa <- factor (mwanza$npa,
levels = c("2", "1", "3", "4"))
# Logistic regression (unchanged)
glm(case ~ npa, family = "binomial", data = mwanza) %>%
logsitc.display()
# Logistic regression (unchanged)
glm(case ~ npa, family = "binomial", data = mwanza) %>%
logistic.display()
glm(case ~ npa + age1, family = "binomial", data = mwanza) %>%
logistic.display()
glm (case ~ npa +age1, family = "binomial", data = mwanza)
glm(case ~ npa + age1, family = "binomial", data = mwanza) %>%
logistic.display()
glm(case ~ npa + age1 + ed2, family = "binomial", data = mwanza) %>%
logistic.display()
logit_inter <- glm (case ~ npa*ed1 + age1, family = "binomial", data = mwanza)
logit_inter <- glm (case ~ npa*ed2 + age1, family = "binomial", data = mwanza)
logit_without <- glm(case ~ npa +ed2 + age1, family = "binomial", data = mwanza)
# Likelihood ratio test
epiDIplay::lrtest(logit_without, logit_inter)
# Likelihood ratio test
epiDisplay::lrtest(logit_without, logit_inter)
glm(case ~ npa * age1, family = "binomial", data = mwanza) %>%
logistic.display()
mwanza%>%table(npa, age1, case, useNA = "ifany")
mwanza%>%table(age1, npa, case, useNA = "ifany")
mwanza%$%table(age1, npa, case, useNA = "ifany")
# Create a new variable, relevel and label
mwanza %<>%
mutate(partners = factor(
case_when(npa == "1" ~ "<=1",
npa == "2" ~ "2-4",
npa == "3" | npa == "4" ~ "5+"),
levels = c("2-4", "<=1", ">=5")
))
# Check it worked well
mwanza %$% table(npa, partners, useNA = "ifany")
# Model with interaction
logit_inter3 <- glm(case ~ partenrs*age1, family = "binomial", data = mwanza)
# Model with interaction
logit_inter3 <- glm(case ~ partners*age1, family = "binomial", data = mwanza)
epiDisplay::logistic.display(logit_inter3)
# Model without interaction
logit_without3 <- glm(case ~ partners + age1, family = "binomial", data = mwanza)
# Likelihood ratio test
epiDisplay::lrtest(logit_inter3, logit_without3)
